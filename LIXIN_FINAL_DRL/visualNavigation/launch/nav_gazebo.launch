<launch>

  <arg name="maze_id" default="1" />   

  <!-- To set the launch parameters -->
  <arg name="world_name" value="$(find rl_nav)/worlds/maze$(arg maze_id).world" />
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />

  <!-- To run the gazebo environments -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
  </include>

  <!-- To load the agent modle parametes -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find
        turtlebot_description)/robots/kobuki_hexagons_kinect.urdf.xacro'" />

  <!-- To run the joint_state_publisher，To publish the joint state -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- To run the robot_state_publisher，To publish TF -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- Load the agent model in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model robot -param robot_description -x 1.0 -y -3.0 -Y 3.14" />
  
  <!-- Load the navigation destination -->
  <node name="spawn_goal" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" 
        args="-file $(find rl_nav)/worlds/goal.urdf -urdf -x -3.8 -y -3.8 -z 0.1 -model goal  " />

  <!-- fake laser
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>  -->

</launch>



